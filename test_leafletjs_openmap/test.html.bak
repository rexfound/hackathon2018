<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="utf-8">
    <style>
      body {margin:0px;padding:0px;} #mapid {height:100vh; width:100vw; display:block;}

      .leaflet-bottom.leaflet-left{
        width: 100%;
      }
      .leaflet-control-container .leaflet-timeline-controls{
        box-sizing: border-box;
        width: 100%;
        margin: 0;
        margin-bottom: 15px;
      }
    </style>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css" integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA==" crossorigin=""/>
	<script src="javascripts/heatmap.js"></script>
    <script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js"
     integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA=="
     crossorigin=""></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.min.js"></script>
    <script src="javascripts/leaflet.timeline.js"></script>
    <link rel="stylesheet" type="text/css" href="css/leaflet-openweathermap.css" />
    <script type="text/javascript" src="javascripts/leaflet-openweathermap.js"></script>
	<script src="javascripts/leaflet-heatmap.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.8/d3.min.js"></script>
  </head>
  <body>
    <div id="mapid"></div>
    <!--The div element for the map -->
    <script src="vancouver.js" type="text/javascript"></script>
	<script src="testData.js" type="text/javascript"></script>
    <script>
  var mAttr = 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery &copy; <a href="https://www.mapbox.com/">Mapbox</a>';
  var mUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}';
  var _OWM_DEFAULT_CONFIG = {opacity: 0.5, appId: '17556070bfb60252ba8bcd48fc9408d5'};

  function getColor(cartodb_id) {
    return cartodb_id % 2 == 0 ? '#800026' : '#BD0026';
  }
  
  //gets the color for a 
  function getColorFor(str) { // java String#hashCode
    var hash = 0;
    for (var i = 0; i < str.length; i++) {
      hash = str.charCodeAt(i) + ((hash << 5) - hash);
    }
    var red = (hash >> 24) & 0xff;
    var grn = (hash >> 16) & 0xff;
    var blu = (hash >>  8) & 0xff;
    return 'rgb(' + red + ',' + grn + ',' + blu + ')';
  } 

  function style(feature) {
    return {
      weight: 2,
      opacity: 1,
      color: 'white',
      dashArray: '3',
      fillOpacity: 0.3,
      fillColor: getColor(feature.properties.cartodb_id)
    };
  }
  
  /* To add new layers, create a layerGroup as follows*/
  /*sample layer groups*/
  var cities = L.layerGroup();
  L.marker([49.056801, -122.285042]).bindPopup('Abbotsford, Popluation ~141,397').addTo(cities);
  L.marker([49.2488, -122.9805]).bindPopup('Burnaby, Population ~232,755').addTo(cities);
  L.marker([49.2628, -122.7811]).bindPopup('Coquitlam, Population ~139,284').addTo(cities);
  L.marker([49.0952, -123.0265]).bindPopup('Delta, Population ~102,238').addTo(cities);
  L.marker([49.2827, -123.1207]).bindPopup('Vancouver, Population ~631,486').addTo(cities);
  L.marker([49.166592, -123.133568]).bindPopup('Richmond, Population ~198309').addTo(cities);
  L.marker([49.1913, -122.8490]).bindPopup('Surrey, Population ~517,887').addTo(cities);

  var geoJson = L.geoJSON(vanData,{style: style});
  
  var timeline = L.timeline(vanData);

  var lakeJson = L.geoJSON(testJson);

  var clouds = L.OWM.clouds(_OWM_DEFAULT_CONFIG);
  var cloudscls = L.OWM.cloudsClassic(_OWM_DEFAULT_CONFIG);
  var precipitation = L.OWM.precipitation(_OWM_DEFAULT_CONFIG);
  var precipitationcls = L.OWM.precipitationClassic(_OWM_DEFAULT_CONFIG);
  var rain = L.OWM.rain(_OWM_DEFAULT_CONFIG);
  var raincls = L.OWM.rainClassic(_OWM_DEFAULT_CONFIG);
  var snow = L.OWM.snow(_OWM_DEFAULT_CONFIG);
  var pressure = L.OWM.pressure(_OWM_DEFAULT_CONFIG);
  var pressurecntr = L.OWM.pressureContour(_OWM_DEFAULT_CONFIG);
  var temp = L.OWM.temperature(_OWM_DEFAULT_CONFIG);
  var wind = L.OWM.wind(_OWM_DEFAULT_CONFIG);

  /*End of sample layergroup */
  
 

  // add more layers here
  var baseLayer = L.tileLayer(mUrl, {
    attribution: mAttr,
    maxZoom: 18,
    id: 'mapbox.light',
    accessToken: 'pk.eyJ1IjoiemVoYWNrcyIsImEiOiJjam42bjh2OGIwbDFzM3dwaTh3N3NtNWRqIn0.yapaCg5pOEkYkPiskIszyQ'
  });
  
  var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 18, attribution: '[wah!]' });

  var mapConfig = {
    center: [49.2827, -123.1207],
    zoom: 10,
    layers: [baseLayer,timeline]
  };


  var mymap = L.map('mapid', mapConfig);

  /*
  // might not use timeline given time constaints
  var timelineControl = L.timelineSliderControl({
    formatOutput: function(date){
      return moment(date).format("YYYY-MM-DD");
    },
    enableKeyboardControls: true
  });

  timelineControl.addTo(mymap);
  timelineControl.addTimelines(timeline);
  */

  var myStyle = {
      "color": "#ff7800",
      "weight": 5,
      "opacity": 0.65
  };

  function mapDraw(csv, map, nearest){
    var pointdata = csv;

    var svg = d3.select("#mymap").select("svg");
    var g = svg.append("g").attr("class", "leaflet-zoom-hide");


    //ボロノイジェネレーター
    var voronoi = d3.geom.voronoi()
      .x(function(d) { return d.x; })
      .y(function(d) { return d.y; });
     update();
   
      
    function update() {
      var positions = [];
      pointdata.forEach(function(d) {        
        var latlng = new L.LatLng(d.latitude, d.longitude);
        /*
        positions.push({
          x :map.latLngToLayerPoint(latlng).x,
          y :map.latLngToLayerPoint(latlng).y
        });*/
        positions.push({x:d.latitude, y:d.longitude});
      });
      
      
      var polygons = voronoi(positions);
      polygons.forEach(function(v) { L.polygon(v, myStyle).addTo(nearest);});
    }
  }
  
    /*Adding the layerGroup here allows the user to control what shows up on the overlay*/
    
  var nearest = L.layerGroup();
  var overlays = {
    "Cities": cities,
    "Geo": geoJson,
    "Timeline":timeline,
    "Lakes": lakeJson,
    "Clouds": clouds,
    "Precipitation": precipitation,
    "Rain": rain,
    "Pressure": pressurecntr,
    "Temperature": temp,
    "Wind": wind,
	"Heatmap" : heatmapLayer
    "Nearest Neighbour": nearest
  };

  d3.csv('supermarkets.csv', function(csv){
    mapDraw(csv, mymap, nearest);
  });

  
  var baseLayers = {
    "Grey Basic": baseLayer,
    "OSM Basic": osm
  };

  /*L.geoJSON(vancouverData).addTo(mymap);*/
  //console.log(vancouverData);
  L.control.layers(baseLayers,overlays).addTo(mymap);

  heatmapLayer.setData(testData);

    </script>
  </body>
</html>
